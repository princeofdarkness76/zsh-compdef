Various ZSH completion scripts. These require http://www.zsh.org/ and must be
located in a $fpath directory. For example, a custom directory could be used
via ~/.zshrc settings such as:

  # custom dir for completions, plus the vendor default ones
  fpath=(~/.zsh/functions $fpath)

  # turn on the completion system
  autoload -U compinit && compinit

(Some folks change $fpath after the autoload, then wonder why things "do
not work.")

* For more info on ZSH completion, consult:

  http://www.amazon.com/From-Bash-Shell-Conquering-Command/dp/1590593766
  http://zshwiki.org/home/examples/compquickstart
  http://bewatermyfriend.org/p/2012/003/

  or try #zsh on the Freenode IRC network. (Do *not* use OMZ. It is
  buggy baggage. (Or any other shell "framework" that you do not
  understand.))

* Even more completion scripts can be found under:

  http://zsh.sourceforge.net/Arc/git.html
  https://github.com/zsh-users/zsh-completions/

* Many of the completions here are for utilities under:

  https://github.com/thrig/sial.org-scripts

  or one or the other of my Perl modules (see github, CPAN).

* A loop for testing new completions might look something like:

      echo 'print -z "foo "' >> ~/.zshrc

  And then while editing the completion for _foo, in the test shell,

      rm ~/.zcompdump; exec zsh

  Which thanks to the `print -z` should get you something you can then
  mash tab on in the test shell. Though this will interfere with other
  starts of interactive shells, so may need:

      [[ $DOZPRINT = 'y' ]] && print -z ...

  And then `DOZPRINT=y exec zsh` to get the canned text in the new shell.
